name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      approval:
        description: 'Type "yes" to apply changes'
        required: true

jobs:
  terraform-dev:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: bq-training-assignment-terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::522814707398:role/role-for-github-workflow
        aws-region: us-west-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Wait for manual approval
      run: |
        APPROVAL="${{ github.event.inputs.approval }}"
        if [[ "$APPROVAL" != "yes" ]]; then
          echo "Approval input was not 'yes'. Exiting the workflow."
          exit 1
        else
          echo "Approval received. Proceeding with Terraform apply."
        fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Workspace(dev)
      run: terraform workspace select dev || terraform workspace new dev

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Apply
      run: terraform apply --auto-approve

    - name: Terraform Destroy
      run: terraform destroy --auto-approve

  terraform-staging:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: bq-training-assignment-terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::522814707398:role/role-for-github-workflow
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Wait for manual approval
      run: |
        APPROVAL="${{ github.event.inputs.approval }}"
        if [[ "$APPROVAL" != "yes" ]]; then
          echo "Approval input was not 'yes'. Exiting the workflow."
          exit 1
        else
          echo "Approval received. Proceeding with Terraform apply."
        fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Workspace(staging)
      run: terraform workspace select staging || terraform workspace new staging

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="aws_region_accepter=us-west-2" -var="aws_region_requester=us-west-1"

    - name: Terraform Apply
      run: terraform apply -var="aws_region_accepter=us-west-2" -var="aws_region_requester=us-west-1" --auto-approve

    - name: Terraform Destroy
      run: terraform destroy -var="aws_region_accepter=us-west-2" -var="aws_region_requester=us-west-1" --auto-approve



# name: Terraform Apply

# on:
#   workflow_dispatch:
#     inputs:
#       approval:
#         description: 'Type "yes" to apply changes'
#         required: true

# jobs:
#   terraform-apply:
#     runs-on: self-hosted
#     strategy:
#       matrix:
#         environment: [staging, deployment]  # Run Terraform Apply for both environments in parallel
#     permissions:
#       id-token: write
#       contents: read

#     environment: ${{ matrix.environment }}  # Set the environment dynamically

#     defaults:
#       run:
#         working-directory: bq-training-assignment-terraform

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials using OIDC
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           role-to-assume: arn:aws:iam::522814707398:role/role-for-github-workflow
#           aws-region: us-east-1

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v3

#       - name: Wait for manual approval
#         run: |
#           APPROVAL="${{ github.event.inputs.approval }}"
#           if [[ "$APPROVAL" != "yes" ]]; then
#             echo "Approval input was not 'yes'. Exiting the workflow."
#             exit 1
#           else
#             echo "Approval received. Proceeding with Terraform apply."
#           fi

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Plan
#         run: terraform plan

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Apply
#         run: terraform apply --auto-approve

#       - name: Terraform Destroy
#         run: terraform destroy --auto-approve
