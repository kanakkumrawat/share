name: Terraform Build

on:
  pull_request:
    branches:
      - main # Trigger this on pull requests to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: bq-training-assignment-terraform

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::522814707398:role/role-for-github-workflow
        aws-region: us-east-1

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    # # Cache Terraform providers and modules
    # - name: Cache Terraform modules
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       ~/.terraform.d
    #       .terraform
    #     key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        
    # Configure AWS credentials (this is if you are using AWS)
    # - name: Set up AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v3
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Terraform plan to see what changes are pending
    - name: Terraform Plan
      run: terraform plan -out=tfplan

    # Upload the Terraform plan as an artifact for later use
    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraformArtifactes
        path: tfplan

    # Validate the Terraform plan (ensure to confirm apply if it's in production)
    - name: Terraform Validate
      run: terraform validate
